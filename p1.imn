node n2 {
    type router
    model host
    network-config {
	hostname gateway
	!
	interface eth0
	 ip address 192.168.2.1/24
	!
	interface eth1
	 ip address 192.168.1.2/24
	!
    }
    canvas c1
    iconcoords {452.0 92.0}
    labelcoords {431.0 66.0}
    interface-peer {eth1 n1}
    services {IPForward DefaultRoute SSH UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	}
    }
    custom-config {
	custom-config-id service:SSH
	custom-command SSH
	config {
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html>
	<body>
	<h1> Welcome to TAI Lab practice 1 Gateway!</h1>
	<p>Currently, the server is working and can be accessed remotely.</p>
	</body>
	</html>
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth1.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.eth1.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth1.rp_filter=0
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.1.1
	
	}
    }
    interface-peer {eth0 n10}
}

node n1 {
    type router
    model PC
    network-config {
	hostname realMachine
	!
	interface eth0
	 ip address 192.168.1.1/24
	!
    }
    canvas c1
    iconcoords {659.0 194.0}
    labelcoords {651.0 231.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', )
	files=('/run/resolvconf/resolv.conf', )
	cmdup=('iptables -t nat -A POSTROUTING -o ctrl0 -j MASQUERADE', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {IPForward DefaultRoute UserDefined}
    interface-peer {eth0 n2}
}

node n10 {
    type hub
    network-config {
	hostname hub
	!
    }
    canvas c1
    iconcoords {262.0 199.0}
    labelcoords {225.0 206.0}
    interface-peer {e0 n3}
    interface-peer {e1 n2}
    interface-peer {e2 n4}
}

node n3 {
    type router
    model PC
    network-config {
	hostname workstation-n3
	!
	interface eth0
	 ip address 192.168.2.33/24
	!
    }
    canvas c1
    iconcoords {264.0 89.0}
    labelcoords {265.0 67.0}
    services {IPForward DefaultRoute UserDefined}
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    interface-peer {eth0 n10}
}

node n4 {
    type router
    model PC
    network-config {
	hostname workstation-n4
	!
	interface eth0
	 ip address 192.168.2.66/24
	!
    }
    canvas c1
    iconcoords {262.0 312.0}
    labelcoords {261.0 349.0}
    services {IPForward DefaultRoute UserDefined}
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv6.conf.all.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.all.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.all.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.default.rp_filter=0
	/sbin/sysctl -w net.ipv4.conf.eth0.forwarding=0
	/sbin/sysctl -w net.ipv4.conf.eth0.send_redirects=0
	/sbin/sysctl -w net.ipv4.conf.eth0.rp_filter=0
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    interface-peer {eth0 n10}
}

link l2 {
    width 1
    nodes {n2 n1}
    bandwidth 0
}

link l1 {
    width 1
    nodes {n3 n10}
    bandwidth 0
}

link l3 {
    width 1
    nodes {n10 n2}
    bandwidth 0
}

link l4 {
    width 1
    nodes {n4 n10}
    bandwidth 0
}

annotation a1 {
    iconcoords {398.0 130.0}
    type text
    label {eth0}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {389.0 172.0}
    label {}
    canvas c1
}

annotation a3 {
    iconcoords {465.0 131.0}
    type text
    label {eth1}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a4 {
    iconcoords {598.0 193.0}
    type text
    label {eth0}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a5 {
    iconcoords {267.0 255.0}
    type text
    label {eth0}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a6 {
    iconcoords {267.0 138.0}
    type text
    label {eth0}
    labelcolor #0000ff
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a7 {
    iconcoords {465.0 59.0}
    type text
    label {(n2)}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a8 {
    type text
    iconcoords {463.0 168.0}
    label {}
    canvas c1
}

annotation a9 {
    iconcoords {695.0 223.0}
    type text
    label {(n1)}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 4:runtime_hook_nat.sh {
#!/bin/sh
SRCNET=172.16.0.0/24
OUTDEV=eth0

IPADDR=`/sbin/ip -4 addr show dev $OUTDEV | grep inet | awk '{ print $2; }' | awk -F / '{ print $1; }'`

echo "Turning IP forwarding ON"
sysctl -w net.ipv4.ip_forward=1

echo "Setting up source NAT from $SRCNET to $OUTDEV:$IPADDR"

iptables -t nat -A POSTROUTING -s $SRCNET -o $OUTDEV -j SNAT --to $IPADDR

























}

hook 5:datacollect_hook_nat.sh {
#!/bin/sh
SRCNET=172.16.0.0/24
OUTDEV=eth0

IPADDR=`/sbin/ip -4 addr show dev $OUTDEV | grep inet | awk '{ print $2; }' | awk -F / '{ print $1; }'`


iptables -t nat -D POSTROUTING -s $SRCNET -o $OUTDEV -j SNAT --to $IPADDR

























}

hook 2:configuration_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
#!/bin/sh
rm -f /root/.bash_history
rm -f //.bash_history
rm -f /root/.ssh/known_hosts


}

hook 6:shutdown_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
#!/bin/sh
rm -f /root/.bash_history
rm -f //.bash_history
rm -f /root/.ssh/known_hosts


}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=172.16.0.0/24
    enablerj45=1
    enablesdt=0
    preservedir=0
}

